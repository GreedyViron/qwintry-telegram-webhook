// /api/lib/calc.js
import { sendMessage } from './utils.js';

// === –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ===
const userStates = new Map();

// === EcoPost —Ç–∞–±–ª–∏—Ü–∞ (DE/UK/ES ‚Üí –†–æ—Å—Å–∏—è) ===
const ECOPOST_PRICES = {
  1: 36.50,
  2: 43.50,
  3: 51.00,
  4: 58.00,
  5: 66.50,
  6: 73.00,
  7: 80.50,
  8: 88.00,
  9: 95.50,
  10: 95.50,
  12: 107.00,
  15: 124.00,
  20: 152.50,
  25: 181.00,
  30: 209.50
};

function getEcoPostPrice(weight) {
  const weights = Object.keys(ECOPOST_PRICES).map(Number).sort((a,b)=>a-b);
  const nearest = weights.find(w => w >= weight) || 30;
  return ECOPOST_PRICES[nearest];
}

// === –°–®–ê —Ç–∞—Ä–∏—Ñ—ã ===
const US_TARIFFS = {
  flash: { name: "‚ö° Flash", pricePerKg: 20, days: "7‚Äì10" },
  economy: { name: "üåç Economy", pricePerKg: 15, days: "12‚Äì20" },
  air: { name: "‚úàÔ∏è Air", pricePerKg: 25, days: "5‚Äì8" },
  smart: { name: "üöÄ Smart", pricePerKg: 30, days: "7‚Äì14" }
};

// === –ö–∏—Ç–∞–π —Ç–∞—Ä–∏—Ñ—ã ===
const CN_TARIFFS = {
  optima: { name: "üî• Flash Optima", pricePerKg: 18, days: "10‚Äì20" },
  ultra: { name: "üíé Flash Ultra", pricePerKg: 25, days: "7‚Äì14" }
};

// === –°–∫–ª–∞–¥—ã ===
const WAREHOUSES = {
  US: { name: '–°–®–ê', flag: 'üá∫üá∏' },
  DE: { name: '–ì–µ—Ä–º–∞–Ω–∏—è', flag: 'üá©üá™' },
  UK: { name: '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è', flag: 'üá¨üáß' },
  ES: { name: '–ò—Å–ø–∞–Ω–∏—è', flag: 'üá™üá∏' },
  CN: { name: '–ö–∏—Ç–∞–π', flag: 'üá®üá≥' }
};

// === –°—Ç—Ä–∞–Ω—ã ===
const COUNTRIES = {
  RU: { name: '–†–æ—Å—Å–∏—è', flag: 'üá∑üá∫' },
  KZ: { name: '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω', flag: 'üá∞üáø' },
  BY: { name: '–ë–µ–ª–∞—Ä—É—Å—å', flag: 'üáßüáæ' },
  UA: { name: '–£–∫—Ä–∞–∏–Ω–∞', flag: 'üá∫üá¶' }
};

// === –ì–æ—Ä–æ–¥–∞ (—Ç–æ–ø-5 –¥–ª—è –†–æ—Å—Å–∏–∏) ===
const CITIES_RU = [
  { name: '–ú–æ—Å–∫–≤–∞', id: 4050 },
  { name: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', id: 4079 },
  { name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', id: 4051 },
  { name: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', id: 4052 },
  { name: '–ö–∞–∑–∞–Ω—å', id: 4053 }
];

// ========================================
// –®–∞–≥ 1: –í—ã–±–æ—Ä —Å–∫–ª–∞–¥–∞
// ========================================
export async function handleCalcCommand(chatId) {
  userStates.set(chatId, { step: 'warehouse' });

  const keyboard = {
    inline_keyboard: [
      [
        { text: `${WAREHOUSES.US.flag} ${WAREHOUSES.US.name}`, callback_data: 'calc_US' },
        { text: `${WAREHOUSES.DE.flag} ${WAREHOUSES.DE.name}`, callback_data: 'calc_DE' }
      ],
      [
        { text: `${WAREHOUSES.UK.flag} ${WAREHOUSES.UK.name}`, callback_data: 'calc_UK' },
        { text: `${WAREHOUSES.ES.flag} ${WAREHOUSES.ES.name}`, callback_data: 'calc_ES' }
      ],
      [
        { text: `${WAREHOUSES.CN.flag} ${WAREHOUSES.CN.name}`, callback_data: 'calc_CN' }
      ],
      [{ text: 'üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back_menu' }]
    ]
  };

  await sendMessage(chatId, 'üì¶ **–í—ã–±–µ—Ä–∏—Ç–µ —Å–∫–ª–∞–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:**', keyboard);
}

// ========================================
// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback (–∫–Ω–æ–ø–∫–∏)
// ========================================
export async function handleCalcCallback(chatId, data) {
  const state = userStates.get(chatId) || {};

  // === –í—ã–±–æ—Ä —Å–∫–ª–∞–¥–∞ ===
  if (data.startsWith('calc_')) {
    const warehouse = data.replace('calc_', '');
    state.warehouse = warehouse;
    state.warehouseName = WAREHOUSES[warehouse].name;
    state.step = 'country';
    userStates.set(chatId, state);

    await showCountrySelection(chatId);
  }

  // === –í—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω—ã ===
  else if (data.startsWith('country_')) {
    const country = data.replace('country_', '');
    state.country = country;
    state.countryName = COUNTRIES[country].name;
    state.step = 'city';
    userStates.set(chatId, state);

    await showCitySelection(chatId, country);
  }

  // === –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ (–∫–Ω–æ–ø–∫–∞) ===
  else if (data.startsWith('city_')) {
    const cityId = data.replace('city_', '');
    const city = CITIES_RU.find(c => c.id == cityId);
    state.cityId = cityId;
    state.cityName = city ? city.name : cityId;
    state.step = 'weight';
    userStates.set(chatId, state);

    await sendMessage(chatId, `‚öñÔ∏è **–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å –ø–æ—Å—ã–ª–∫–∏ –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö:**\n\n–ü—Ä–∏–º–µ—Ä: \`2.5\` –∏–ª–∏ \`3\``);
  }
}

// ========================================
// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–≥–æ—Ä–æ–¥/–≤–µ—Å)
// ========================================
export async function handleCalcText(chatId, text) {
  const state = userStates.get(chatId);
  if (!state) return false; // –Ω–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞

  // === –í–≤–æ–¥ –≥–æ—Ä–æ–¥–∞ –≤—Ä—É—á–Ω—É—é ===
  if (state.step === 'city') {
    state.cityName = text;
    state.cityId = 4050; // –¥–µ—Ñ–æ–ª—Ç –ú–æ—Å–∫–≤–∞ (–º–æ–∂–Ω–æ –ø–æ—Ç–æ–º —É–ª—É—á—à–∏—Ç—å)
    state.step = 'weight';
    userStates.set(chatId, state);

    await sendMessage(chatId, `‚öñÔ∏è **–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å –ø–æ—Å—ã–ª–∫–∏ –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö:**\n\n–ü—Ä–∏–º–µ—Ä: \`2.5\` –∏–ª–∏ \`3\``);
    return true;
  }

  // === –í–≤–æ–¥ –≤–µ—Å–∞ ===
  if (state.step === 'weight') {
    const weight = parseFloat(text.replace(',', '.'));

    if (isNaN(weight) || weight <= 0 || weight > 50) {
      await sendMessage(chatId, '‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–µ—Å. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0.1 –¥–æ 50 –∫–≥:');
      return true;
    }

    state.weight = weight;
    userStates.set(chatId, state);

    await sendMessage(chatId, '‚è≥ –†–∞—Å—Å—á–∏—Ç—ã–≤–∞—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏...');
    await calculateAndSend(chatId, state);

    // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    userStates.delete(chatId);
    return true;
  }

  return false;
}

// ========================================
// –í—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω—ã
// ========================================
async function showCountrySelection(chatId) {
  const keyboard = {
    inline_keyboard: [
      [{ text: `${COUNTRIES.RU.flag} ${COUNTRIES.RU.name}`, callback_data: 'country_RU' }],
      [{ text: `${COUNTRIES.KZ.flag} ${COUNTRIES.KZ.name}`, callback_data: 'country_KZ' }],
      [{ text: `${COUNTRIES.BY.flag} ${COUNTRIES.BY.name}`, callback_data: 'country_BY' }],
      [{ text: `${COUNTRIES.UA.flag} ${COUNTRIES.UA.name}`, callback_data: 'country_UA' }],
      [{ text: 'üîô –ù–∞–∑–∞–¥ –∫ —Å–∫–ª–∞–¥–∞–º', callback_data: 'calc' }]
    ]
  };

  await sendMessage(chatId, 'üåç **–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è:**', keyboard);
}

// ========================================
// –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞
// ========================================
async function showCitySelection(chatId, country) {
  if (country === 'RU') {
    const cityButtons = CITIES_RU.map(c => [{ text: c.name, callback_data: `city_${c.id}` }]);

    const keyboard = {
      inline_keyboard: [
        ...cityButtons,
        [{ text: 'üîô –ù–∞–∑–∞–¥ –∫ —Å—Ç—Ä–∞–Ω–∞–º', callback_data: 'calc' }]
      ]
    };

    await sendMessage(chatId, 'üèôÔ∏è **–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤—Ä—É—á–Ω—É—é:**', keyboard);
  } else {
    // –î–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤–≤–æ–¥
    const state = userStates.get(chatId);
    state.step = 'city';
    userStates.set(chatId, state);

    await sendMessage(chatId, 'üèôÔ∏è **–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:**');
  }
}

// ========================================
// –†–∞—Å—á—ë—Ç –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
// ========================================
async function calculateAndSend(chatId, state) {
  const { warehouse, warehouseName, country, countryName, cityName, weight } = state;

  let message = `üì¶ **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏**\n\n`;
  message += `üìç **–ú–∞—Ä—à—Ä—É—Ç:** ${warehouseName} ‚Üí ${countryName}, ${cityName}\n`;
  message += `‚öñÔ∏è **–í–µ—Å:** ${weight} –∫–≥\n\n`;
  message += `üíµ **–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã:**\n\n`;

  // === EcoPost –¥–ª—è –ï–≤—Ä–æ–ø—ã (DE/UK/ES) ===
  if (['DE', 'UK', 'ES'].includes(warehouse)) {
    const price = getEcoPostPrice(weight);
    message += `üåç **EcoPost (Qwintry Economy)**\n`;
    message += `üí∞ –¶–µ–Ω–∞: $${price.toFixed(2)}\n`;
    message += `‚è± –°—Ä–æ–∫: 25‚Äì35 –¥–Ω–µ–π\n\n`;
    message += `üí° *–°—Ç—Ä–∞—Ö–æ–≤–∫–∞ $3 —Å—á–∏—Ç–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ (–æ–ø—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ)*\n\n`;
  }

  // === –°–®–ê (4 —Ç–∞—Ä–∏—Ñ–∞) ===
  else if (warehouse === 'US') {
    for (const key in US_TARIFFS) {
      const t = US_TARIFFS[key];
      const price = (t.pricePerKg * weight).toFixed(2);
      message += `${t.name}\n`;
      message += `üí∞ –¶–µ–Ω–∞: ~$${price}\n`;
      message += `‚è± –°—Ä–æ–∫: ${t.days} –¥–Ω–µ–π\n\n`;
    }
  }

  // === –ö–∏—Ç–∞–π (2 —Ç–∞—Ä–∏—Ñ–∞) ===
  else if (warehouse === 'CN') {
    for (const key in CN_TARIFFS) {
      const t = CN_TARIFFS[key];
      const price = (t.pricePerKg * weight).toFixed(2);
      message += `${t.name}\n`;
      message += `üí∞ –¶–µ–Ω–∞: ~$${price}\n`;
      message += `‚è± –°—Ä–æ–∫: ${t.days} –¥–Ω–µ–π\n\n`;
    }
  }

  message += `üîó [–ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ —Å–∞–π—Ç–µ](https://qwintry.com/ru/calculator)`;

  const keyboard = {
    inline_keyboard: [
      [{ text: 'üîÑ –ù–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç', callback_data: 'calc' }],
      [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'back_menu' }]
    ]
  };

  await sendMessage(chatId, message, keyboard);
}
